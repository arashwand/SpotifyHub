using Microsoft.EntityFrameworkCore;
using SportifyHub.Models;
// using SportifyHub.Models.Enums; // Enums are directly under SportifyHub.Models namespace now
using System;
using System.Collections.Generic;
using System.Linq;
// using Microsoft.AspNetCore.Builder; // For IApplicationBuilder, if using that pattern
// using Microsoft.Extensions.DependencyInjection; // For IServiceScopeFactory

namespace SportifyHub.Data
{
    public static class SeedData
    {
        // Placeholder for actual context injection if we were to save to DB
        public static void EnsurePopulated(IApplicationBuilder app)
        {
            ApplicationDbContext context = app.ApplicationServices
                .CreateScope().ServiceProvider.GetRequiredService<ApplicationDbContext>();

            if (context.Database.GetPendingMigrations().Any())
            {
                 context.Database.Migrate(); // Apply migrations - SKIPPING THIS
            }

            if (context.Venues.Any() || context.FitnessClasses.Any())
            {
                Console.WriteLine("Database already seeded.");
                return; // DB has been seeded
            }

            Console.WriteLine("Seeding database...");
            PopulateData(context);
            Console.WriteLine("Database seeding complete.");
        }

        // This method will prepare data and could be called by EnsurePopulated or a similar mechanism.
        // For now, it just demonstrates data creation. The `context.SaveChanges()` will be commented out.
        public static void PopulateData(ApplicationDbContext context)
        {
            // --- Amenities ---
            var amenities = GetAmenities();
            context.Amenities.AddRange(amenities);
            context.SaveChanges(); // Save amenities to get IDs if DB was live

            // --- Reviews ---
            var reviews = GetReviews("user1_placeholder_id", "user2_placeholder_id", "user3_placeholder_id");
            context.Reviews.AddRange(reviews);
            context.SaveChanges(); // Save reviews

            // --- Venues ---
            var venues = GetVenues(amenities, reviews.Take(2).ToList()); // Provide a subset of reviews for venues
            context.Venues.AddRange(venues);

            // --- Coaches ---
            var coaches = GetCoaches(reviews.Skip(2).Take(1).ToList()); // Provide a different subset for coaches
            context.Coaches.AddRange(coaches);

            // --- FitnessClasses ---
            var fitnessClasses = GetFitnessClasses(coaches, reviews.Take(1).ToList()); // And another subset
            context.FitnessClasses.AddRange(fitnessClasses);

            // --- Products ---
            var products = GetProducts();
            context.Products.AddRange(products);

            // --- Articles ---
            var articles = GetArticles();
            context.Articles.AddRange(articles);

            try
            {
                context.SaveChanges();
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Error saving seeded data: {ex.Message}");
            }
        }

        public static List<Amenity> GetAmenities()
        {
            return new List<Amenity>
            {
                new Amenity { Id = 1, Name = "پارکینگ" },
                new Amenity { Id = 2, Name = "وای‌فای" },
                new Amenity { Id = 3, Name = "دوش" },
                new Amenity { Id = 4, Name = "کمد" },
                new Amenity { Id = 5, Name = "تهویه مطبوع" },
                new Amenity { Id = 6, Name = "آب سردکن" }
            };
        }

        public static List<Review> GetReviews(string userId1, string userId2, string userId3, int? venueId = null, int? classId = null, int? coachId = null)
        {
            // Note: IDs for reviews would typically be auto-generated by the database.
            // Setting them manually here is for linking purposes if data isn't saved yet.
            return new List<Review>
            {
                new Review { Id = 1, UserId = userId1, UserName = "علی رضایی", Rating = 5, Comment = "عالی بود! خیلی تمیز و مرتب.", Date = DateTime.Parse("2024-05-05"), VenueId = venueId, FitnessClassId = classId, CoachId = coachId },
                new Review { Id = 2, UserId = userId2, UserName = "سارا محمدی", Rating = 4, Comment = "امکانات خوبی داشت، فقط کمی شلوغ بود.", Date = DateTime.Parse("2024-04-30"), VenueId = venueId, FitnessClassId = classId, CoachId = coachId },
                new Review { Id = 3, UserId = userId3, UserName = "محمد حسینی", Rating = 3, Comment = "متوسط بود، میتونست بهتر باشه.", Date = DateTime.Parse("2024-05-22"), VenueId = venueId, FitnessClassId = classId, CoachId = coachId }
            };
        }

        public static List<Venue> GetVenues(List<Amenity> allAmenities, List<Review> venueReviews)
        {
            var venues = new List<Venue>
            {
                new Venue
                {
                    Id = 1, Name = "زمین فوتبال چمن مصنوعی آزادی", SportType = SportCategory.FOOTBALL, Location = "مجموعه ورزشی آزادی، تهران", City = "تهران",
                    Images = new List<string> { "/images/venues/football-field-1.jpg", "/images/venues/football-field-2.jpg" },
                    MapLink = "https://maps.google.com/?q=Azadi+Sport+Complex+Football",
                    AvailableTimeSlotsJson = "{\"شنبه\": [\"۱۶:۰۰-۱۸:۰۰\", \"۱۸:۰۰-۲۰:۰۰\"], \"یکشنبه\": [\"۱۰:۰۰-۱۲:۰۰\", \"۱۴:۰۰-۱۶:۰۰\"], \"دوشنبه\": [\"۱۶:۰۰-۱۸:۰۰\"], \"سه‌شنبه\": [], \"چهارشنبه\": [\"۱۸:۰۰-۲۰:۰۰\", \"۲۰:۰۰-۲۲:۰۰\"], \"پنج‌شنبه\": [\"۱۰:۰۰-۱۲:۰۰\", \"۱۲:۰۰-۱۴:۰۰\", \"۱۴:۰۰-۱۶:۰۰\"], \"جمعه\": [\"۰۸:۰۰-۱۰:۰۰\", \"۱۰:۰۰-۱۲:۰۰\"]}",
                    PricePerHour = 250000, Rating = 4.5, Description = "یک زمین فوتبال با کیفیت عالی و نورپردازی مناسب برای بازی در شب.",
                    Reviews = venueReviews.Where(r => r.Id <= 2).ToList(), // Assigning a subset of reviews
                    VenueAmenities = new List<VenueAmenity>
                    {
                        new VenueAmenity { AmenityId = allAmenities[0].Id },
                        new VenueAmenity { AmenityId = allAmenities[1].Id },
                        new VenueAmenity { AmenityId = allAmenities[2].Id },
                        new VenueAmenity { AmenityId = allAmenities[3].Id }
                    }
                },
                new Venue
                {
                    Id = 2, Name = "استخر بین‌المللی انقلاب", SportType = SportCategory.SWIMMING, Location = "مجموعه ورزشی انقلاب، تهران", City = "تهران",
                    Images = new List<string> { "/images/venues/pool-1.jpg", "/images/venues/pool-2.jpg" },
                    MapLink = "https://maps.google.com/?q=Enghelab+Sport+Complex+Pool",
                    AvailableTimeSlotsJson = "{\"شنبه\": [\"۰۸:۰۰-۱۰:۰۰\", \"۱۰:۰۰-۱۲:۰۰\", \"۱۴:۰۰-۱۶:۰۰ (بانوان)\"], \"یکشنبه\": [\"۰۸:۰۰-۱۰:۰۰ (بانوان)\", \"۱۰:۰۰-۱۲:۰۰ (بانوان)\", \"۱۴:۰۰-۱۶:۰۰\"]}",
                    PricePerHour = 150000, Rating = 4.8, Description = "استخر استاندارد المپیک با تمامی امکانات رفاهی.",
                    Reviews = venueReviews.Where(r => r.Id == 2 || r.Id == 3).ToList(), // Assigning another subset
                    VenueAmenities = allAmenities.Select(a => new VenueAmenity { AmenityId = a.Id }).ToList()
                },
                new Venue
                {
                    Id = 3, Name = "سالن بسکتبال هما", SportType = SportCategory.BASKETBALL, Location = "خیابان آپادانا، تهران", City = "تهران",
                    Images = new List<string> { "/images/venues/basketball-court-1.jpg", "/images/venues/basketball-court-2.jpg" },
                    MapLink = "https://maps.google.com/?q=Homa+Basketball+Hall",
                    AvailableTimeSlotsJson = "{\"دوشنبه\": [\"۱۸:۰۰-۲۰:۰۰\", \"۲۰:۰۰-۲۲:۰۰\"]}",
                    PricePerHour = 300000, Rating = 4.2, Description = "سالن مجهز بسکتبال با کفپوش استاندارد و تهویه مناسب.",
                    Reviews = venueReviews.Where(r => r.Id == 1).ToList(), // Assigning a specific review
                    VenueAmenities = new List<VenueAmenity>
                    {
                        new VenueAmenity { AmenityId = allAmenities[0].Id },
                        new VenueAmenity { AmenityId = allAmenities[1].Id },
                        new VenueAmenity { AmenityId = allAmenities[2].Id }
                    }
                }
            };
            // Set FKs for reviews
            foreach(var venue in venues)
            {
                foreach(var review in venue.Reviews) { review.VenueId = venue.Id; }
            }
            return venues;
        }

        public static List<Coach> GetCoaches(List<Review> coachReviews)
        {
            var coaches = new List<Coach>
            {
                new Coach
                {
                    Id = 1, Name = "رضا قاسمی", Location = "تهران", Rating = 4.8,
                    Bio = "مربی بدنسازی با بیش از ۱۰ سال سابقه کار با ورزشکاران در سطوح مختلف. متخصص در طراحی برنامه‌های تمرینی و تغذیه.",
                    QualificationsJson = "[\"مدرک مربیگری درجه ۱ فدراسیون بدنسازی\", \"کارشناس تربیت بدنی\"]",
                    PhotoUrl = "/images/coaches/reza-ghasemi.jpg", ExperienceYears = 10,
                    Reviews = coachReviews.Where(r => r.Id == 1 || r.Id == 2).ToList(),
                    CoachSpecialties = new List<CoachSpecialty>
                    {
                        new CoachSpecialty { Specialty = SportCategory.GYM },
                        new CoachSpecialty { Specialty = SportCategory.GENERAL_FITNESS }
                    }
                },
                new Coach
                {
                    Id = 2, Name = "مریم احمدی", Location = "تهران", Rating = 4.9,
                    Bio = "مربی یوگا و پیلاتس با تمرکز بر سلامت جسم و روان. دارای مدرک بین‌المللی یوگا از هند.",
                    QualificationsJson = "[\"مدرک بین‌المللی مربیگری یوگا (RYT 500)\", \"مربی پیلاتس از موسسه معتبر\"]",
                    PhotoUrl = "/images/coaches/maryam-ahmadi.jpg", ExperienceYears = 7,
                    Reviews = coachReviews.Where(r => r.Id == 3).ToList(),
                    CoachSpecialties = new List<CoachSpecialty>
                    {
                        new CoachSpecialty { Specialty = SportCategory.YOGA },
                        new CoachSpecialty { Specialty = SportCategory.PILATES }
                    }
                }
            };
            foreach(var coach in coaches)
            {
                foreach(var review in coach.Reviews) { review.CoachId = coach.Id; }
                foreach(var spec in coach.CoachSpecialties) { spec.CoachId = coach.Id; }
            }
            return coaches;
        }

        public static List<FitnessClass> GetFitnessClasses(List<Coach> allCoaches, List<Review> classReviews)
        {
            var fitnessClasses = new List<FitnessClass>
            {
                new FitnessClass
                {
                    Id = 1, Name = "کلاس یوگا آرامش درون", ClassSportCategory = SportCategory.YOGA, Location = "باشگاه نیلوفر آبی، سعادت آباد", SkillLevel = SkillLevel.ALL_LEVELS,
                    InstructorId = allCoaches.FirstOrDefault(c => c.Name == "مریم احمدی")?.Id,
                    Schedule = "یکشنبه و سه‌شنبه ۱۷:۰۰-۱۸:۳۰", Price = 800000, Description = "در این کلاس با تمرینات یوگا به آرامش جسم و ذهن برسید.",
                    Image = "/images/classes/yoga-class.jpg", Rating = 4.9,
                    Reviews = classReviews.Where(r => r.Id == 1).ToList()
                },
                new FitnessClass
                {
                    Id = 2, Name = "کلاس آمادگی جسمانی پیشرفته", ClassSportCategory = SportCategory.GYM, Location = "باشگاه انرژی پلاس، ونک", SkillLevel = SkillLevel.ADVANCED,
                    InstructorId = allCoaches.FirstOrDefault(c => c.Name == "رضا قاسمی")?.Id,
                    Schedule = "روزهای زوج ۱۹:۰۰-۲۰:۳۰", Price = 1200000, Description = "کلاسی چالشی برای ورزشکاران حرفه‌ای جهت افزایش قدرت و استقامت.",
                    Image = "/images/classes/gym-class.jpg", Rating = 4.7,
                    Reviews = classReviews.Where(r => r.Id == 2).ToList()
                }
            };
            foreach(var fc in fitnessClasses)
            {
                foreach(var review in fc.Reviews) { review.FitnessClassId = fc.Id; }
            }
            return fitnessClasses;
        }

        public static List<Product> GetProducts()
        {
            return new List<Product>
            {
                new Product { Id = 1, Name = "تیشرت ورزشی مردانه نایک", Category = "پوشاک", Images = new List<string> {"/images/products/nike-shirt-1.jpg", "/images/products/nike-shirt-2.jpg"}, Description = "تیشرت ورزشی با تکنولوژی Dri-FIT برای خشک نگه داشتن بدن.", Price = 750000, Stock = 50, Rating = 4.6 },
                new Product { Id = 2, Name = "مت یوگا طرح‌دار", Category = "تجهیزات", Images = new List<string> {"/images/products/yoga-mat.jpg"}, Description = "مت یوگا ضد لغزش با ضخامت مناسب و طرح‌های زیبا.", Price = 450000, Stock = 100, Rating = 4.8 },
                new Product { Id = 3, Name = "پودر پروتئین وی ۱ کیلویی", Category = "تغذیه", Images = new List<string> {"/images/products/protein-powder.jpg"}, Description = "پروتئین وی کنسانتره با کیفیت بالا برای عضله‌سازی و ریکاوری.", Price = 1800000, Stock = 30, Rating = 4.5 }
            };
        }

        public static List<Article> GetArticles()
        {
            return new List<Article>
            {
                new Article { Id = 1, Title = "۵ نکته کلیدی برای شروع ورزش در خانه", Category = "نکات سلامتی", Author = "تیم اسپورتيفای هاب", Date = DateTime.Parse("2024-05-10"), Summary = "اگر به تازگی تصمیم گرفته‌اید ورزش را شروع کنید و امکان رفتن به باشگاه را ندارید، این نکات به شما کمک می‌کند تا در خانه به بهترین شکل تمرین کنید.", Content = "متن کامل مقاله در مورد نکات ورزش در خانه...", ImageUrl = "/images/articles/home-workout.jpg", TagsJson = "[\"ورزش در خانه\", \"مبتدی\", \"سلامتی\"]" },
                new Article { Id = 2, Title = "راهنمای کامل تغذیه برای ورزشکاران", Category = "راهنمای تمرین", Author = "دکتر سمیرا افشار", Date = DateTime.Parse("2024-05-08"), Summary = "تغذیه مناسب نقش حیاتی در عملکرد ورزشی و ریکاوری دارد. در این مقاله به بررسی اصول تغذیه ورزشی می‌پردازیم.", Content = "متن کامل مقاله در مورد تغذیه ورزشی...", ImageUrl = "/images/articles/nutrition-guide.jpg", TagsJson = "[\"تغذیه\", \"ورزشکاران\", \"رژیم غذایی\"]" }
            };
        }
    }
}
